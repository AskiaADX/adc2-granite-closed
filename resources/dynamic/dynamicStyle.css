/* IMPORT PARAMETERS FROM THE ADC*/
{%
Dim innerCircleBGTop =CurrentADC.PropValue("innerCircleBGTop")
Dim innerCircleBGBottom =CurrentADC.PropValue("innerCircleBGBottom")
Dim outerCircleBGTop =CurrentADC.PropValue("outerCircleBGTop")
Dim outerCircleBGBottom =CurrentADC.PropValue("outerCircleBGBottom")
Dim tickColor =CurrentADC.PropValue("tickColor")
Dim responseColor =CurrentADC.PropValue("responseColor")
%}

        



 /* RADIO CONTROL STYLING BEGINS HERE */
        #adc_{%= CurrentADC.InstanceId%} .radioWrapper {
            /* This is the outer circle of the radio control */
            width: 18px;
            height: 18px;
            position: relative;
            margin: 20px;
            background: #fcfff4;
            background: -webkit-linear-gradient(top, {%=outerCircleBGTop.toHexa()%} 40%, {%=outerCircleBGBottom.toHexa()%} 100%);
            background: linear-gradient(to bottom, {%=outerCircleBGTop.toHexa()%} 40%, {%=outerCircleBGBottom.toHexa()%} 100%);
            border-radius: 50px;
            box-shadow: inset 0px 1px 1px white, 0px 1px 3px rgba(0, 0, 0, 0.5);
        }

        #adc_{%= CurrentADC.InstanceId%} .checkWrapper {
            width: 20px;
            position: relative;
            margin: 20px;
        }


        #adc_{%= CurrentADC.InstanceId%} .radioWrapper label {
            /* This is the inner circle of the radio control */
            width: 14px;
            height: 14px;
            position: absolute;
            top: 2px;
            left: 2px;
            cursor: pointer;
            background: -webkit-linear-gradient(top, {%=innerCircleBGTop.toHexa()%} 0%, {%=innerCircleBGBottom.toHexa()%} 100%);
            background: linear-gradient(to bottom, {%=innerCircleBGTop.toHexa()%} 0%, {%=innerCircleBGBottom.toHexa()%} 100%);
            border-radius: 50px;
            box-shadow: inset 0px 1px 1px rgba(0, 0, 0, 0.5), 0px 1px 0px white;
        }

        #adc_{%= CurrentADC.InstanceId%} .checkWrapper label {
            /* This is the inner circle of the radio control */
            width: 14px;
            height: 14px;
            position: absolute;
            top: 0;
            left: 0;
            cursor: pointer;
            background: -webkit-linear-gradient(top, {%=innerCircleBGTop.toHexa()%} 0%, {%=innerCircleBGBottom.toHexa()%} 100%);
            background: linear-gradient(to bottom, {%=innerCircleBGTop.toHexa()%} 0%, {%=innerCircleBGBottom.toHexa()%} 100%);
            border-radius:2px;
            box-shadow: inset 0px 1px 1px white, 0px 1px 3px rgba(0, 0, 0, 0.5);
        }

        #adc_{%= CurrentADC.InstanceId%} .radioWrapper label:after {
            /* This is the actual check / tick */
            content: '';
            width: 6px;
            height: 2px;
            position: absolute;
            top: 4px;
            left: 3px;
            /* This is the weight of the check / tick as well as it's color*/
            border: 2px solid {%=tickColor.toHexa()%};
            border-top: none;
            border-right: none;
            background: transparent;
            opacity: 0;
            /* This is what makes the borders transform into a check */
            /* NOT SUPPORTED IN IE < 9 - will require falling back on a classic radio */
            -webkit-transform: rotate(-45deg);
            -ms-transform: rotate(-45deg);
            transform: rotate(-45deg);
            transition: opacity ease-in-out .2s;
        }

    #adc_{%= CurrentADC.InstanceId%} .checkWrapper label:after {
            /* This is the actual check / tick */
            content: '';
            width: 7px;
            height: 3px;
            position: absolute;
            top: 5px;
            left: 4px;
            /* This is the weight of the check / tick as well as it's color*/
            border: 2px solid {%=tickColor.toHexa()%};
            border-top: none;
            border-right: none;
            background: transparent;
            opacity: 0;
            /* This is what makes the borders transform into a check */
            /* NOT SUPPORTED IN IE < 9 - will require falling back on a classic radio */
            -webkit-transform: rotate(-45deg);
            -ms-transform: rotate(-45deg);
            transform: rotate(-45deg);
            transition: opacity ease-in-out .2s;
        }

        #adc_{%= CurrentADC.InstanceId%} .radioWrapper label:hover::after, #adc_{%= CurrentADC.InstanceId%} .checkWrapper label:hover::after {
            opacity: 0.5;
            transition: opacity ease-in-out .2s;
        }

        #adc_{%= CurrentADC.InstanceId%} .radioWrapper input[type=radio], #adc_{%= CurrentADC.InstanceId%} .checkWrapper input[type=checkbox] {
            visibility: hidden;
            transition: opacity ease-in-out .2s;
        }

        #adc_{%= CurrentADC.InstanceId%} .radioWrapper input[type=radio]:checked + label:after , #adc_{%= CurrentADC.InstanceId%} .checkWrapper input[type=checkbox]:checked + label:after {
            opacity: 1;
        }

        #adc_{%= CurrentADC.InstanceId%} .item-label {
            position: absolute;
            left: 26px;
            width: 250px;
            color: #2C3E50;
            font-weight: 600;
            transition: color ease-in-out .2s;
            /* Prevents selecting response item text - optional */
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

        #adc_{%= CurrentADC.InstanceId%} .radioWrapper input[type=radio]:hover + label span, #adc_{%= CurrentADC.InstanceId%} .checkWrapper input[type=checkbox]:hover + label span , #adc_{%= CurrentADC.InstanceId%} .radioWrapper input[type=radio]:checked + label span , #adc_{%= CurrentADC.InstanceId%} .checkWrapper input[type=checkbox]:checked + label span {
            /* Allows the response item to change color when hovered and/or selected */
            color: {%=responseColor.toHexa()%};
        }